name: API Test Automation CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run tests daily at 00:00 UTC
    - cron: '0 0 * * *'
  workflow_dispatch:
    # Allow manual trigger

jobs:
  test:
    name: Run API Tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run TypeScript compilation
        run: npm run build
      
      - name: Run tests with coverage
        run: npm run test:coverage
        continue-on-error: true
      
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-node-${{ matrix.node-version }}
          path: test-reports/
          retention-days: 30
      
      - name: Upload coverage reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-node-${{ matrix.node-version }}
          path: coverage/
          retention-days: 30
  
  lint:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: TypeScript type check
        run: npx tsc --noEmit
  
  notify:
    name: Notification
    runs-on: ubuntu-latest
    needs: [test, lint]
    if: always()
    
    steps:
      - name: Test Status
        run: |
          echo "Tests completed!"
          echo "Test job status: ${{ needs.test.result }}"
          echo "Lint job status: ${{ needs.lint.result }}"
